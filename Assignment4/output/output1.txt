======================================================================
No Errors in the code
Intermediate code generated successfully
======================================================================
0x62d782f4c4b0 FUNC_BEGIN foo
0x62d782f535c0 a := PARAM
0x62d782f535c0 RETURN 2
0x62d782f4c4b0 FUNC_END foo
0x62d782f4c4b0 FUNC_BEGIN main
0x62d782f54220 a:= 2
0x62d782f54220 PARAM 3
0x62d782f54220 t0 := CALL foo,1
0x62d782f54220 c:= t0
0x62d782f54220 PARAM "%d\n"
0x62d782f54220 PARAM c
0x62d782f54220 t1 := CALL printf,2
0x62d782f54220 RETURN 0
0x62d782f4c4b0 FUNC_END main
======================================================================
Printing scope table
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| foo             | int                  | 4       | N/A        |
| main            | int                  | 4       | N/A        |
| printf          |                      | 0       | N/A        |
| scanf           |                      | 0       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | int                  | 4       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | int                  | 4       | 2          |
| c               | int                  | 4       | N/A        |
| t0              | int                  | 4       | N/A        |
| t1              |                      | 0       | N/A        |
-----------------------------------------------------------------
Function foo stack size: 12
Function main stack size: 24
Pass 1 done
LHS: a, RHS: PARAM
Token rhs: PARAM
Token lhs: a
LHS: a, RHS: 2
Token lhs: a
LHS: t0, RHS: CALL foo,1
Token rhs: CALL
Token rhs: foo,1
Error!!!! Variable foo,1 not found in any scope
Token lhs: t0
LHS: c, RHS: t0
Token rhs: t0
Token lhs: c
LHS: t1, RHS: CALL printf,2
Token rhs: CALL
Token rhs: printf,2
Error!!!! Variable printf,2 not found in any scope
Token lhs: t1
Liveness analysis done
Inside pass2
FUNC_BEGIN foo
a := PARAM
Handling param receive: a := PARAM
Getting register for a
Assigned register $t9 to a
RETURN 2
FUNC_END foo
FUNC_BEGIN main
a:= 2
Handling assignment: a := 2
Getting register for a
Assigned register $t8 to a
PARAM 3
t0 := CALL foo,1
Handling assignment: t0 := CALL foo,1
Getting register for t0
Assigned register $t7 to t0
Handling function call: CALL foo,1
c:= t0
Handling assignment: c := t0
Getting register for c
Assigned register $t6 to c
Getting register for t0
Found register for t0 $t7
PARAM "%d\n"
PARAM c
Getting register for c
Found register for c $t6
t1 := CALL printf,2
Handling assignment: t1 := CALL printf,2
Getting register for t1
Assigned register $t5 to t1
Handling function call: CALL printf,2
----------------------2
RETURN 0
FUNC_END main
Pass 2 done
################ MIPS Assembly Code ################ 
.data
newline: .asciiz "\n"
str0: .asciiz ""
.text
.globl main
foo:
    move $fp, $sp
    addi $sp, $sp, -12
    sw   $ra, 8($sp)
    sw   $fp, 4($sp)
    move $t9, $a0
    li $v0, 2
    lw   $fp, 4($sp)
    lw   $ra, 8($sp)
    addi $sp, $sp, 12
    jr   $ra
main:
    move $fp, $sp
    addi $sp, $sp, -24
    sw   $ra, 20($sp)
    sw   $fp, 16($sp)
    li $t8, 2
    li $a0, 3
    jal foo
    move $t7, $v0
    move $t6, $t7
    la $a0, str0
    move $a1, $t6
#printf
 move $a0, $a0
    li $v0, 4
syscall
  li $v0, 4 
 la $a0, newline 
 syscall
 move $a0, $a1
    li $v0, 1
syscall
  li $v0, 4 
 la $a0, newline 
 syscall
    move $t5, $v0
    li $v0, 0
    lw   $fp, 16($sp)
    lw   $ra, 20($sp)
    addi $sp, $sp, 24
    li $v0, 10
    syscall
