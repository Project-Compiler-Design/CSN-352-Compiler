======================================================================
No Errors in the code
Intermediate code generated successfully
======================================================================
0x59fb182984b0 FUNC_BEGIN main
0x59fb1829e6b0 a:= 2
0x59fb1829e6b0 t0 :=  a == 3
0x59fb1829e6b0 if(t0) goto LABEL0
0x59fb1829e6b0 goto LABEL1
0x59fb1829e6b0 LABEL0:
0x59fb1829f7b0 b:= 4
0x59fb1829e6b0 goto LABEL2
0x59fb1829e6b0 LABEL1:
0x59fb182a03d0 c:= 5
0x59fb1829e6b0 LABEL2:
0x59fb1829e6b0 RETURN 0
0x59fb182984b0 FUNC_END main
FUNC_BEGIN main
a:= 2
Handling assignment: a := 2
t0 :=  a == 3
Handling operation: t0 := a == 3
Operation: a == 3
Registers: $t9, $t8, $t7
Loaded constant literal 3 into $t8
if(t0) goto LABEL0
Condition: t0, Label: LABEL0
goto LABEL1
LABEL0:
b:= 4
Handling assignment: b := 4
goto LABEL2
LABEL1:
c:= 5
Handling assignment: c := 5
LABEL2:
RETURN 0
FUNC_END main
# MIPS Assembly Code:
main:
    addi $sp, $sp, --500
    sw   $ra, -504($sp)
    sw   $fp, -508($sp)
    move $fp, $sp
    li $t9, 2
    li $t8, 3
    seq $t7, $t9, $t8
    bnez $t7, LABEL0
    j LABEL1
LABEL0:
    li $t6, 4
    j LABEL2
LABEL1:
    li $t5, 5
LABEL2:
    li $v0, 0
    move $sp, $fp
    lw   $fp, -508($sp)
    lw   $ra, -504($sp)
    addi $sp, $sp, -500
    jr   $ra
