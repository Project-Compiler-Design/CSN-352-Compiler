=====================LIST OF ERRORS===================================
Line 7 : Missing return statement
======================================================================
0x5593cff3d8b0 FUNC_BEGIN main
0x5593cff443c0 i:= 5
0x5593cff443c0 LABEL0:
0x5593cff443c0 t0 :=  i > 0
0x5593cff443c0 if(t0) goto LABEL1
0x5593cff443c0 goto LABEL2
0x5593cff443c0 LABEL2:
0x5593cff454c0 i :=  i - 1 
0x5593cff443c0 goto LABEL0
0x5593cff443c0 LABEL1:
0x5593cff3d8b0 FUNC_END main
======================================================================
Printing scope table
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| main            | int                  | 4       | N/A        |
| printf          |                      | 0       | N/A        |
| scanf           |                      | 0       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| i               | int                  | 4       | 5          |
| t0              | int                  | 4       | N/A        |
-----------------------------------------------------------------
Function main stack size: 16
Pass 1 done
LHS: i, RHS: 5
Token lhs: i
LHS: t0, RHS: i > 0
Token rhs: i
Token lhs: t0
LHS: i, RHS: i - 1
Token lhs: i
Liveness analysis done
Inside pass2
FUNC_BEGIN main
i:= 5
Handling assignment: i := 5
Getting register for i
Assigned register $t9 to i
LABEL0:
t0 :=  i > 0
Handling operation: t0 := i > 0
Getting register for i
Found register for i $t9
Loaded integer constant 0 into $t8
Getting register for t0
Assigned register $t7 to t0
Operation: i > 0
Registers: $t9, $t8, $t7
if(t0) goto LABEL1
Condition: t0, Label: LABEL1
Getting register for t0
Found register for t0 $t7
goto LABEL2
LABEL2:
i :=  i - 1
Handling operation: i := i - 1
Getting register for i
Found register for i $t9
Loaded integer constant 1 into $t6
Getting register for i
Found register for i $t9
Operation: i - 1
Registers: $t9, $t6, $t9
goto LABEL0
LABEL1:
FUNC_END main
Pass 2 done
################ MIPS Assembly Code ################ 
.data
newline: .asciiz "\n"
static_a: .float 5.300000
.data
float_const_4.000000: .float 4.000000
.text
.text
.globl main
main:
    move $fp, $sp
    addi $sp, $sp, -16
    sw   $ra, 12($sp)
    sw   $fp, 8($sp)
    li $t9, 5
LABEL0:
    li $t8, 0
    slt $t7, $t8, $t9
    bnez $t7, LABEL1
    j LABEL2
LABEL2:
    li $t6, 1
    sub $t9, $t9, $t6
    j LABEL0
LABEL1:
    lw   $fp, 8($sp)
    lw   $ra, 12($sp)
    addi $sp, $sp, 16
    li $v0, 10
    syscall
