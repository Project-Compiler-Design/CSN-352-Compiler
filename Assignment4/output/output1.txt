======================================================================
No Errors in the code
Intermediate code generated successfully
======================================================================
0x5ea8502ea4b0 FUNC_BEGIN main
0x5ea8502f0fc0 f:= 5.500000
0x5ea8502f0fc0 PARAM "Hi"
0x5ea8502f0fc0 PARAM f
0x5ea8502f0fc0 t0 := CALL printf,2
0x5ea8502f0fc0 RETURN 0
0x5ea8502ea4b0 FUNC_END main
======================================================================
Printing scope table
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| main            | int                  | 4       | N/A        |
| printf          |                      | 0       | N/A        |
| scanf           |                      | 0       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| f               | float                | 4       | 5.500000   |
| t0              |                      | 0       | N/A        |
-----------------------------------------------------------------
Function main stack size: 16
Pass 1 done
Error!!!! Variable printf,2 not found in any scope
Liveness analysis done
FUNC_BEGIN main
f:= 5.500000
Handling assignment: f := 5.500000
Assigning float register $f31 to f
$f30
PARAM "Hi"
PARAM f
t0 := CALL printf,2
Handling assignment: t0 := CALL printf,2
Getting register for t0
Assigned register $t9 to t0
Handling function call: CALL printf,2
----------------------2
RETURN 0
FUNC_END main
Pass 2 done
################ MIPS Assembly Code ################ 
.data
str0: .asciiz "Hi"
.text
.globl main
main:
    move $fp, $sp
    addi $sp, $sp, -16
    sw   $ra, 12($sp)
    sw   $fp, 8($sp)
    li.s $f31, 5.500000
    la $a0, str0
    mov.s $f12, $f31
 move $a0, $a0
    li $v0, 4
syscall
    mov.s $f12, $f12
    li $v0, 2
syscall
    move $t9, $v0
    li $v0, 0
    lw   $fp, 8($sp)
    lw   $ra, 12($sp)
    addi $sp, $sp, 16
    li $v0, 10
    syscall
