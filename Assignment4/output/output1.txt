======================================================================
No Errors in the code
Intermediate code generated successfully
======================================================================
0x595d911394b0 FUNC_BEGIN main
0x595d9113ffc0 a:= 5
0x595d9113ffc0 PARAM "Hi %d"
0x595d9113ffc0 PARAM a
0x595d9113ffc0 t0 := CALL printf,2
0x595d9113ffc0 RETURN 0
0x595d911394b0 FUNC_END main
======================================================================
Printing scope table
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| main            | int                  | 4       | N/A        |
| printf          |                      | 0       | N/A        |
| scanf           |                      | 0       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | int                  | 4       | 5          |
| t0              |                      | 0       | N/A        |
-----------------------------------------------------------------
Function main stack size: 16
Pass 1 done
Error!!!! Variable printf,2 not found in any scope
Liveness analysis done
FUNC_BEGIN main
a:= 5
Handling assignment: a := 5
Getting register for a
Assigned register $t9 to a
PARAM "Hi %d"
PARAM a
Getting register for a
Found register for a $t9
t0 := CALL printf,2
Handling assignment: t0 := CALL printf,2
Getting register for t0
Assigned register $t8 to t0
Handling function call: CALL printf,2
----------------------2
RETURN 0
FUNC_END main
Pass 2 done
################ MIPS Assembly Code ################ 
.data
newline: .asciiz "\n"
str0: .asciiz "Hi"
.text
.globl main
main:
    move $fp, $sp
    addi $sp, $sp, -16
    sw   $ra, 12($sp)
    sw   $fp, 8($sp)
    li $t9, 5
    la $a0, str0
    move $a1, $t9
 move $a0, $a0
    li $v0, 4
syscall
  li $v0, 4 
 la $a0, newline 
 syscall
 move $a0, $a1
    li $v0, 1
syscall
  li $v0, 4 
 la $a0, newline 
 syscall
    move $t8, $v0
    li $v0, 0
    lw   $fp, 8($sp)
    lw   $ra, 12($sp)
    addi $sp, $sp, 16
    li $v0, 10
    syscall
