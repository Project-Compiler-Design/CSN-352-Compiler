=====================LIST OF ERRORS===================================
Line 10 : Missing return statement
======================================================================
0x55afb6d6c8b0 FUNC_BEGIN main
0x55afb6d73f50 a:= alloc 8
0x55afb6d73f50 t0 := a + 0
0x55afb6d73f50 *t0 := 5
0x55afb6d73f50 t1 := a + 4
0x55afb6d73f50 *t1 := 10
0x55afb6d6c8b0 FUNC_END main
======================================================================
Printing scope table
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| main            | int                  | 4       | N/A        |
| printf          |                      | 0       | N/A        |
| scanf           |                      | 0       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | struct A             | 0       | N/A        |
| a.x             | int                  | 4       | 5          |
| a.y             | int                  | 4       | 10         |
| t0              | struct A             | 0       | N/A        |
| t1              | struct A             | 0       | N/A        |
-----------------------------------------------------------------
Function main stack size: 20
Pass 1 done
LHS: a, RHS: 3
Token lhs: a
LHS: t0, RHS: a + 0
Token rhs: a
Token lhs: t0
LHS: *t0, RHS: 5
Token lhs: t0
LHS: t1, RHS: a + 4
Token rhs: a
Token lhs: t1
LHS: *t1, RHS: 10
Token lhs: t1
Liveness analysis done
Inside pass2
FUNC_BEGIN main
a:=  3
Handling assignment: a := 3
Getting register for a
Assigned register $t9 to a
last_offset: 0
Allocating 8 bytes for a at offset 0
t0 := a + 0
Struct name: a
struct A
t0 a + 0 a 0
Getting register for t0
Assigned register $t8 to t0
Struct a found in register$t9
Pushing a into stack
Pushing struct/union a into stack
0
*t0 := 5
Handling pointer arrays: *t0 := 5
*t0 5
lhs t0
Getting register for t0
Found register for t0 $t8
querying available regs
available regs
9
Loaded constant 5 into $t9
t1 := a + 4
Struct name: a
struct A
t1 a + 4 a 4
Getting register for t1
Assigned register $t7 to t1
Struct a found in register$t9
Pushing a into stack
Pushing struct/union a into stack
0
*t1 := 10
Handling pointer arrays: *t1 := 10
*t1 10
lhs t1
Getting register for t1
Found register for t1 $t7
querying available regs
available regs
8
Loaded constant 10 into $t9
FUNC_END main
Pass 2 done
################ MIPS Assembly Code ################ 
.data
newline: .asciiz "\n"
.text
.globl main
main:
    move $fp, $sp
    addi $sp, $sp, -20
    sw   $ra, 16($sp)
    sw   $fp, 12($sp)
    #Pushing a to stack
    addi $t8, $sp, 0
    #Loading constant 5 into register
    li $t9, 5
    sw $t9, 0($t8)
    #Pushing a to stack
    addi $t7, $sp, 4
    #Loading constant 10 into register
    li $t9, 10
    sw $t9, 0($t7)
    lw   $fp, 12($sp)
    lw   $ra, 16($sp)
    addi $sp, $sp, 20
    li $v0, 10
    syscall
