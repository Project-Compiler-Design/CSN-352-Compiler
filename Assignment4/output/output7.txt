======================================================================
No Errors in the code
Intermediate code generated successfully
======================================================================
1.      global_var:= 100
2.  FUNC_BEGIN add
3.      param0 := PARAM
4.      param1 := PARAM
5.      a := param0
6.      b := param1
7.      t0 :=  a + b
8.      RETURN t0
9.  FUNC_END add
10.  FUNC_BEGIN divide
11.      param0 := PARAM
12.      param1 := PARAM
13.      a := param0
14.      b := param1
15.      t1 :=  b == 0
16.      if (t1) goto LABEL0
17.      goto LABEL1
18.  LABEL0:
19.      "Error: divide by zero\n"
20.      PARAM "Error: divide by zero\n"
21.      t2 := CALL printf,1
22.      0.000000
23.      RETURN 0.000000
24.  LABEL1:
25.      t3 :=  a / b
26.      RETURN t3
27.  FUNC_END divide
28.  FUNC_BEGIN max_in_array
29.      param0 := PARAM
30.      param1 := PARAM
31.      arr := param0
32.      size := param1
33.      RETURN 0
34.  FUNC_END max_in_array
35.  FUNC_BEGIN print_array
36.      param0 := PARAM
37.      param1 := PARAM
38.      arr := param0
39.      size := param1
40.      "\n"
41.      PARAM "\n"
42.      t4 := CALL printf,1
43.      RETURN
44.  FUNC_END print_array
45.  FUNC_BEGIN initialize_array
46.      param0 := PARAM
47.      param1 := PARAM
48.      param2 := PARAM
49.      arr := param0
50.      size := param1
51.      value := param2
52.      RETURN
53.  FUNC_END initialize_array
54.  FUNC_BEGIN factorial
55.      param0 := PARAM
56.      n := param0
57.      t5 :=  n < 0
58.      if (t5) goto LABEL2
59.      goto LABEL3
60.  LABEL2:
61.      -1
62.      RETURN -1
63.  LABEL3:
64.      t6 :=  n == 0
65.      if (t6) goto LABEL4
66.      goto LABEL5
67.  LABEL4:
68.      RETURN 1
69.  LABEL5:
70.      t7 :=  n - 1
71.      PARAM t7
72.      t8 := CALL factorial,1
73.      t9 :=  n * t8
74.      RETURN t9
75.  FUNC_END factorial
76.  FUNC_BEGIN create_point
77.      param0 := PARAM
78.      param1 := PARAM
79.      x := param0
80.      y := param1
81.      p:= alloc 8
82.      t10 := p + 0
83.      *t10 := x
84.      t11 := p + 4
85.      *t11 := y
86.      RETURN p
87.  FUNC_END create_point
88.  FUNC_BEGIN print_point
89.      param0 := PARAM
90.      p := param0
91.      "Point: (%d, %d)\n"
92.      PARAM "Point: (%d, %d)\n"
93.      PARAM p
94.      PARAM p
95.      t12 := CALL printf,3
96.      RETURN
97.  FUNC_END print_point
98.  FUNC_BEGIN main
99.      a:= 10
100.      b:= 5
101.      PARAM a
102.      PARAM b
103.      t13 := CALL add,2
104.      sum:= t13
105.      "Sum: %d\n"
106.      PARAM "Sum: %d\n"
107.      PARAM sum
108.      t14 := CALL printf,2
109.      PARAM a
110.      PARAM b
111.      t15 := CALL divide,2
112.      result:= t15
113.      "Division: %.2f\n"
114.      PARAM "Division: %.2f\n"
115.      PARAM result
116.      t16 := CALL printf,2
117.      arr := alloc 20
118.      t17:= 0*4
119.      *( arr + t17 ) := 1
120.      t18:= 1*4
121.      *( arr + t18 ) := 7
122.      t19:= 2*4
123.      *( arr + t19 ) := 3
124.      t20:= 3*4
125.      *( arr + t20 ) := 9
126.      t21:= 4*4
127.      *( arr + t21 ) := 2
128.      PARAM arr
129.      PARAM 5
130.      CALL print_array,2
131.      PARAM arr
132.      PARAM 5
133.      t23 := CALL max_in_array,2
134.      max_val:= t23
135.      "Max value: %d\n"
136.      PARAM "Max value: %d\n"
137.      PARAM max_val
138.      t24 := CALL printf,2
139.      "Initialized global array (first 5 values): "
140.      PARAM "Initialized global array (first 5 values): "
141.      t25 := CALL printf,1
142.      PARAM 5
143.      t26 := CALL factorial,1
144.      fact:= t26
145.      "Factorial of 5: %d\n"
146.      PARAM "Factorial of 5: %d\n"
147.      PARAM fact
148.      t27 := CALL printf,2
149.      PARAM 3
150.      PARAM 4
151.      t28 := CALL create_point,2
152.      pt:= t28
153.      PARAM &pt
154.      CALL print_point,1
155.      i:= 100
156.      i:=  0
157.  LABEL6:
158.      t30 :=  i < 3
159.      if(t30) goto LABEL8
160.      goto LABEL7
161.  LABEL8:
162.      "Loop i: %d\n"
163.      PARAM "Loop i: %d\n"
164.      PARAM i
165.      t31 := CALL printf,2
166.      i :=  i + 1
167.      goto LABEL6
168.  LABEL7:
169.      "Outer i: %d\n"
170.      PARAM "Outer i: %d\n"
171.      PARAM i
172.      t32 := CALL printf,2
173.      ptr:= &sum
174.      "Value via pointer: %d\n"
175.      PARAM "Value via pointer: %d\n"
176.      PARAM *ptr
177.      t33 := CALL printf,2
178.      RETURN 0
179.  FUNC_END main



1.  0x55d37dd228b0              global_var:= 100
2.  0x55d37dd228b0          FUNC_BEGIN add
3.  0x55d37dd228b0              param0 := PARAM
4.  0x55d37dd228b0              param1 := PARAM
5.  0x55d37dd228b0              a := param0
6.  0x55d37dd228b0              b := param1
7.  0x55d37dd29ff0              t0 :=  a + b
8.  0x55d37dd29ff0              RETURN t0
9.  0x55d37dd228b0          FUNC_END add
10.  0x55d37dd228b0          FUNC_BEGIN divide
11.  0x55d37dd228b0              param0 := PARAM
12.  0x55d37dd228b0              param1 := PARAM
13.  0x55d37dd228b0              a := param0
14.  0x55d37dd228b0              b := param1
15.  0x55d37dd286a0              t1 :=  b == 0
16.  0x55d37dd286a0              if (t1) goto LABEL0
17.  0x55d37dd286a0              goto LABEL1
18.  0x55d37dd286a0          LABEL0:
19.  0x55d37dd2b100              PARAM "Error: divide by zero\n"
20.  0x55d37dd2b100              t2 := CALL printf,1
21.  0x55d37dd2b100              RETURN 0.000000
22.  0x55d37dd286a0          LABEL1:
23.  0x55d37dd286a0              t3 :=  a / b
24.  0x55d37dd286a0              RETURN t3
25.  0x55d37dd228b0          FUNC_END divide
26.  0x55d37dd228b0          FUNC_BEGIN max_in_array
27.  0x55d37dd228b0              param0 := PARAM
28.  0x55d37dd228b0              param1 := PARAM
29.  0x55d37dd228b0              arr := param0
30.  0x55d37dd228b0              size := param1
31.  0x55d37dd30350              RETURN 0
32.  0x55d37dd228b0          FUNC_END max_in_array
33.  0x55d37dd228b0          FUNC_BEGIN print_array
34.  0x55d37dd228b0              param0 := PARAM
35.  0x55d37dd228b0              param1 := PARAM
36.  0x55d37dd228b0              arr := param0
37.  0x55d37dd228b0              size := param1
38.  0x55d37dd330f0              PARAM "\n"
39.  0x55d37dd330f0              t4 := CALL printf,1
40.  0x55d37dd330f0              RETURN
41.  0x55d37dd228b0          FUNC_END print_array
42.  0x55d37dd228b0          FUNC_BEGIN initialize_array
43.  0x55d37dd228b0              param0 := PARAM
44.  0x55d37dd228b0              param1 := PARAM
45.  0x55d37dd228b0              param2 := PARAM
46.  0x55d37dd228b0              arr := param0
47.  0x55d37dd228b0              size := param1
48.  0x55d37dd228b0              value := param2
49.  0x55d37dd35c80              RETURN
50.  0x55d37dd228b0          FUNC_END initialize_array
51.  0x55d37dd228b0          FUNC_BEGIN factorial
52.  0x55d37dd228b0              param0 := PARAM
53.  0x55d37dd228b0              n := param0
54.  0x55d37dd383b0              t5 :=  n < 0
55.  0x55d37dd383b0              if (t5) goto LABEL2
56.  0x55d37dd383b0              goto LABEL3
57.  0x55d37dd383b0          LABEL2:
58.  0x55d37dd383b0              -1
59.  0x55d37dd383b0              RETURN -1
60.  0x55d37dd383b0          LABEL3:
61.  0x55d37dd383b0              t6 :=  n == 0
62.  0x55d37dd383b0              if (t6) goto LABEL4
63.  0x55d37dd383b0              goto LABEL5
64.  0x55d37dd383b0          LABEL4:
65.  0x55d37dd383b0              RETURN 1
66.  0x55d37dd383b0          LABEL5:
67.  0x55d37dd383b0              t7 :=  n - 1
68.  0x55d37dd383b0              PARAM t7
69.  0x55d37dd383b0              t8 := CALL factorial,1
70.  0x55d37dd383b0              t9 :=  n * t8
71.  0x55d37dd383b0              RETURN t9
72.  0x55d37dd228b0          FUNC_END factorial
73.  0x55d37dd228b0          FUNC_BEGIN create_point
74.  0x55d37dd228b0              param0 := PARAM
75.  0x55d37dd228b0              param1 := PARAM
76.  0x55d37dd228b0              x := param0
77.  0x55d37dd228b0              y := param1
78.  0x55d37dd3d610              p:= alloc 8
79.  0x55d37dd3d610              t10 := p + 0
80.  0x55d37dd3d610              *t10 := x
81.  0x55d37dd3d610              t11 := p + 4
82.  0x55d37dd3d610              *t11 := y
83.  0x55d37dd3d610              RETURN p
84.  0x55d37dd228b0          FUNC_END create_point
85.  0x55d37dd228b0          FUNC_BEGIN print_point
86.  0x55d37dd228b0              param0 := PARAM
87.  0x55d37dd228b0              p := param0
88.  0x55d37dd43d30              PARAM "Point: (%d, %d)\n"
89.  0x55d37dd43d30              PARAM p
90.  0x55d37dd43d30              PARAM p
91.  0x55d37dd43d30              t12 := CALL printf,3
92.  0x55d37dd43d30              RETURN
93.  0x55d37dd228b0          FUNC_END print_point
94.  0x55d37dd228b0          FUNC_BEGIN main
95.  0x55d37dd46230              a:= 10
96.  0x55d37dd46230              b:= 5
97.  0x55d37dd46230              PARAM a
98.  0x55d37dd46230              PARAM b
99.  0x55d37dd46230              t13 := CALL add,2
100.  0x55d37dd46230              sum:= t13
101.  0x55d37dd46230              PARAM "Sum: %d\n"
102.  0x55d37dd46230              PARAM sum
103.  0x55d37dd46230              t14 := CALL printf,2
104.  0x55d37dd46230              PARAM a
105.  0x55d37dd46230              PARAM b
106.  0x55d37dd46230              t15 := CALL divide,2
107.  0x55d37dd46230              result:= t15
108.  0x55d37dd46230              PARAM "Division: %.2f\n"
109.  0x55d37dd46230              PARAM result
110.  0x55d37dd46230              t16 := CALL printf,2
111.  0x55d37dd46230              arr := alloc 20
112.  0x55d37dd46230              t17:= 0*4
113.  0x55d37dd46230              *( arr + t17 ) := 1
114.  0x55d37dd46230              t18:= 1*4
115.  0x55d37dd46230              *( arr + t18 ) := 7
116.  0x55d37dd46230              t19:= 2*4
117.  0x55d37dd46230              *( arr + t19 ) := 3
118.  0x55d37dd46230              t20:= 3*4
119.  0x55d37dd46230              *( arr + t20 ) := 9
120.  0x55d37dd46230              t21:= 4*4
121.  0x55d37dd46230              *( arr + t21 ) := 2
122.  0x55d37dd46230              PARAM arr
123.  0x55d37dd46230              PARAM 5
124.  0x55d37dd46230              CALL print_array,2
125.  0x55d37dd46230              PARAM arr
126.  0x55d37dd46230              PARAM 5
127.  0x55d37dd46230              t23 := CALL max_in_array,2
128.  0x55d37dd46230              max_val:= t23
129.  0x55d37dd46230              PARAM "Max value: %d\n"
130.  0x55d37dd46230              PARAM max_val
131.  0x55d37dd46230              t24 := CALL printf,2
132.  0x55d37dd46230              PARAM "Initialized global array (first 5 values): "
133.  0x55d37dd46230              t25 := CALL printf,1
134.  0x55d37dd46230              PARAM 5
135.  0x55d37dd46230              t26 := CALL factorial,1
136.  0x55d37dd46230              fact:= t26
137.  0x55d37dd46230              PARAM "Factorial of 5: %d\n"
138.  0x55d37dd46230              PARAM fact
139.  0x55d37dd46230              t27 := CALL printf,2
140.  0x55d37dd46230              PARAM 3
141.  0x55d37dd46230              PARAM 4
142.  0x55d37dd46230              t28 := CALL create_point,2
143.  0x55d37dd46230              pt:= t28
144.  0x55d37dd46230              PARAM &pt
145.  0x55d37dd46230              CALL print_point,1
146.  0x55d37dd46230              i:= 100
147.  0x55d37dd46230              i:=  0
148.  0x55d37dd46230          LABEL6:
149.  0x55d37dd46230              t30 :=  i < 3
150.  0x55d37dd46230              if(t30) goto LABEL8
151.  0x55d37dd46230              goto LABEL7
152.  0x55d37dd46230          LABEL8:
153.  0x55d37dd58e20              PARAM "Loop i: %d\n"
154.  0x55d37dd58e20              PARAM i
155.  0x55d37dd58e20              t31 := CALL printf,2
156.  0x55d37dd46230              i :=  i + 1
157.  0x55d37dd46230              goto LABEL6
158.  0x55d37dd46230          LABEL7:
159.  0x55d37dd46230              PARAM "Outer i: %d\n"
160.  0x55d37dd46230              PARAM i
161.  0x55d37dd46230              t32 := CALL printf,2
162.  0x55d37dd46230              ptr:= &sum
163.  0x55d37dd46230              PARAM "Value via pointer: %d\n"
164.  0x55d37dd46230              PARAM *ptr
165.  0x55d37dd46230              t33 := CALL printf,2
166.  0x55d37dd46230              RETURN 0
167.  0x55d37dd228b0          FUNC_END main
 
 global_var:= 100
 FUNC_BEGIN add
 param0 := PARAM
 param1 := PARAM
 a := param0
 b := param1
 t0 :=  a + b

 RETURN t0
 FUNC_END add
 FUNC_BEGIN divide
 param0 := PARAM
 param1 := PARAM
 a := param0
 b := param1
 t1 :=  b == 0
 if (t1) goto LABEL0
 goto LABEL1
 LABEL0:
 PARAM "Error: divide by zero\n"
 t2 := CALL printf,1
 RETURN 0.000000
 LABEL1:
 t3 :=  a / b
 RETURN t3
 FUNC_END divide
 FUNC_BEGIN max_in_array
 param0 := PARAM
 param1 := PARAM
 arr := param0
 size := param1
 RETURN 0
 FUNC_END max_in_array
 FUNC_BEGIN print_array
 param0 := PARAM
 param1 := PARAM
 arr := param0
 size := param1
 PARAM "\n"
 t4 := CALL printf,1
 RETURN
 FUNC_END print_array
 FUNC_BEGIN initialize_array
 param0 := PARAM
 param1 := PARAM
 param2 := PARAM
 arr := param0
 size := param1
 value := param2
 RETURN
 FUNC_END initialize_array
 FUNC_BEGIN factorial
 param0 := PARAM
 n := param0
 t5 :=  n < 0
 if (t5) goto LABEL2
 goto LABEL3
 LABEL2:
 -1
 RETURN -1
 LABEL3:
 t6 :=  n == 0
 if (t6) goto LABEL4
 goto LABEL5
 LABEL4:
 RETURN 1
 LABEL5:
 t7 :=  n - 1

 PARAM t7
 t8 := CALL factorial,1
 t9 :=  n * t8
 RETURN t9
 FUNC_END factorial
 FUNC_BEGIN create_point
 param0 := PARAM
 param1 := PARAM
 x := param0
 y := param1
 p:= alloc 8
 t10 := p + 0
 *t10 := x
 t11 := p + 4
 *t11 := y
 RETURN p
 FUNC_END create_point
 FUNC_BEGIN print_point
 param0 := PARAM
 p := param0
 PARAM "Point: (%d, %d)\n"
 PARAM p
 PARAM p
 t12 := CALL printf,3
 RETURN
 FUNC_END print_point
 FUNC_BEGIN main
 
 a:= 10
 
 b:= 5
 
 
 
 PARAM a
 PARAM b
 t13 := CALL add,2
 
 sum:= t13
 PARAM "Sum: %d\n"
 PARAM sum
 t14 := CALL printf,2
 
 
 
 PARAM a
 PARAM b
 t15 := CALL divide,2
 
 result:= t15
 PARAM "Division: %.2f\n"
 PARAM result
 t16 := CALL printf,2
 arr := alloc 20
 t17:= 0*4
 *( arr + t17 ) := 1
 t18:= 1*4
 *( arr + t18 ) := 7
 t19:= 2*4
 *( arr + t19 ) := 3
 t20:= 3*4
 *( arr + t20 ) := 9
 t21:= 4*4
 *( arr + t21 ) := 2
 PARAM arr
 PARAM 5
 CALL print_array,2
 
 
 5
 PARAM arr
 PARAM 5
 t23 := CALL max_in_array,2
 
 max_val:= t23
 PARAM "Max value: %d\n"
 PARAM max_val
 t24 := CALL printf,2
 PARAM "Initialized global array (first 5 values): "
 t25 := CALL printf,1
 
 5
 PARAM 5
 t26 := CALL factorial,1
 
 fact:= t26
 PARAM "Factorial of 5: %d\n"
 PARAM fact
 t27 := CALL printf,2
 
 3
 4
 PARAM 3
 PARAM 4
 t28 := CALL create_point,2
 
 pt:= t28
 &pt
 PARAM &pt
 CALL print_point,1
 
 i:= 100
 i:=  0
 LABEL6:
 t30 :=  i < 3
 if(t30) goto LABEL8
 goto LABEL7
 LABEL8:
 PARAM "Loop i: %d\n"
 PARAM i
 t31 := CALL printf,2
 

 i :=  i + 1 
 goto LABEL6
 LABEL7:
 PARAM "Outer i: %d\n"
 PARAM i
 t32 := CALL printf,2
 
 &sum
 
 ptr:= &sum
 *ptr
 PARAM "Value via pointer: %d\n"
 PARAM *ptr
 t33 := CALL printf,2
 RETURN 0
 FUNC_END main
