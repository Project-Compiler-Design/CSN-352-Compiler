=====================LIST OF ERRORS===================================
Line 17 : Missing return statement
======================================================================
0x562328a3e8b0 FUNC_BEGIN factorial
0x562328a46300 n := PARAM
0x562328a459c0 t0 :=  n == 0
0x562328a459c0 if (t0) goto LABEL0
0x562328a459c0 goto LABEL1
0x562328a459c0 LABEL0:
0x562328a46300 RETURN 1
0x562328a459c0 goto LABEL2
0x562328a459c0 LABEL1:
0x562328a46bf0 t1 :=  n - 1
0x562328a46bf0 PARAM t1
0x562328a46bf0 t2 := CALL factorial,1
0x562328a46bf0 t3 :=  n * t2
0x562328a46bf0 RETURN t3
0x562328a459c0 LABEL2:
0x562328a3e8b0 FUNC_END factorial
0x562328a3e8b0 FUNC_BEGIN main
0x562328a48d50 a:= 2
0x562328a48d50 PARAM a
0x562328a48d50 t4 := CALL factorial,1
0x562328a48d50 b:= t4
0x562328a48d50 PARAM "HI%d\n"
0x562328a48d50 PARAM b
0x562328a48d50 t5 := CALL printf,2
0x562328a48d50 RETURN 0
0x562328a3e8b0 FUNC_END main
======================================================================
Printing scope table
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| factorial       | int                  | 4       | N/A        |
| main            | int                  | 4       | N/A        |
| printf          |                      | 0       | N/A        |
| scanf           |                      | 0       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| t1              | int                  | 4       | N/A        |
| t2              | int                  | 4       | N/A        |
| t3              | int                  | 4       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| n               | int                  | 4       | N/A        |
| t0              | int                  | 4       | N/A        |
-----------------------------------------------------------------
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | int                  | 4       | 2          |
| b               | int                  | 4       | N/A        |
| t4              | int                  | 4       | N/A        |
| t5              |                      | 0       | N/A        |
-----------------------------------------------------------------
Function factorial stack size: 28
Function main stack size: 24
Pass 1 done
LHS: n, RHS: PARAM
Token rhs: PARAM
Token lhs: n
LHS: t0, RHS: n == 0
Token rhs: n
Token lhs: t0
LHS: t1, RHS: n - 1
Token rhs: n
Token lhs: t1
LHS: t2, RHS: CALL factorial,1
Token rhs: CALL
Token rhs: factorial,1
Error!!!! Variable factorial,1 not found in any scope
Token lhs: t2
LHS: t3, RHS: n * t2
Token rhs: n
Token rhs: t2
Token lhs: t3
LHS: a, RHS: 2
Token lhs: a
LHS: t4, RHS: CALL factorial,1
Token rhs: CALL
Token rhs: factorial,1
Error!!!! Variable factorial,1 not found in any scope
Token lhs: t4
LHS: b, RHS: t4
Token rhs: t4
Token lhs: b
LHS: t5, RHS: CALL printf,2
Token rhs: CALL
Token rhs: printf,2
Error!!!! Variable printf,2 not found in any scope
Token lhs: t5
Liveness analysis done
Inside pass2
FUNC_BEGIN factorial
idhar
yaha
factorial
abe
bahar
n := PARAM
Handling param receive: n := PARAM
Getting register for n
Assigned register $t9 to n
t0 :=  n == 0
Handling operation: t0 := n == 0
Getting register for n
Found register for n $t9
Loaded integer constant 0 into $t8
Getting register for t0
Assigned register $t7 to t0
Operation: n == 0
Registers: $t9, $t8, $t7
if (t0) goto LABEL0
idhar aagaya
Condition: t0, Label: LABEL0
Getting register for t0
Found register for t0 $t7
goto LABEL1
LABEL0:
RETURN 1
factorial hello 1
exit done
goto LABEL2
LABEL1:
t1 :=  n - 1
Handling operation: t1 := n - 1
Getting register for n
Found register for n $t9
Loaded integer constant 1 into $t6
Getting register for t1
Assigned register $t5 to t1
Operation: n - 1
Registers: $t9, $t6, $t5
PARAM t1
Getting register for t1
Found register for t1 $t5
t2 := CALL factorial,1
Handling assignment: t2 := CALL factorial,1
Getting register for t2
Assigned register $t4 to t2
Handling function call: CALL factorial,1
t3 :=  n * t2
Handling operation: t3 := n * t2
Getting register for n
Found register for n $t9
Getting register for t2
Found register for t2 $t4
Getting register for t3
Assigned register $t3 to t3
Operation: n * t2
Registers: $t9, $t4, $t3
RETURN t3
factorial hello t3
Getting register for t3
Found register for t3 $t3
exit done
LABEL2:
FUNC_END factorial
exit done
FUNC_BEGIN main
idhar
yaha
main
abe
bahar
a:= 2
Handling assignment: a := 2
Getting register for a
Assigned register $t2 to a
PARAM a
Getting register for a
Found register for a $t2
t4 := CALL factorial,1
Handling assignment: t4 := CALL factorial,1
Getting register for t4
Assigned register $t1 to t4
Handling function call: CALL factorial,1
b:= t4
Handling assignment: b := t4
Getting register for b
Assigned register $t0 to b
Getting register for t4
Found register for t4 $t1
PARAM "HI%d\n"
PARAM b
Getting register for b
Found register for b $t0
t5 := CALL printf,2
Handling assignment: t5 := CALL printf,2
Getting register for t5
Handling register spill for t5
Spilling n from $t9
Assigned register $t9 to t5
Handling function call: CALL printf,2
printf me
----------------------2
RETURN 0
main hello 0
FUNC_END main
exit done
Pass 2 done
################ MIPS Assembly Code ################ 
.data
newline: .asciiz "\n"
str0: .asciiz "HI"
.text
.globl main
factorial:
    move $fp, $sp
    addi $sp, $sp, -68
    sw   $ra, 64($sp)
    sw   $fp, 60($sp)
    sw   $t0, 56($sp)
    sw   $t1, 52($sp)
    sw   $t2, 48($sp)
    sw   $t3, 44($sp)
    sw   $t4, 40($sp)
    sw   $t5, 36($sp)
    sw   $t6, 32($sp)
    sw   $t7, 28($sp)
    sw   $t8, 24($sp)
    sw   $t9, 20($sp)
    move $t9, $a0
    li $t8, 0
    seq $t7, $t9, $t8
    bnez $t7, LABEL0
    j LABEL1
LABEL0:
    lw   $fp, 60($sp)
    lw   $ra, 64($sp)
    lw   $t0, 56($sp)
    lw   $t1, 52($sp)
    lw   $t2, 48($sp)
    lw   $t3, 44($sp)
    lw   $t4, 40($sp)
    lw   $t5, 36($sp)
    lw   $t6, 32($sp)
    lw   $t7, 28($sp)
    lw   $t8, 24($sp)
    lw   $t9, 20($sp)
    addi $sp, $sp, 68
    li $v0, 1
    jr $ra
    j LABEL2
LABEL1:
    li $t6, 1
    sub $t5, $t9, $t6
    move $a0, $t5
    jal factorial
    move $t4, $v0
    mul $t3, $t9, $t4
    lw   $fp, 60($sp)
    lw   $ra, 64($sp)
    lw   $t0, 56($sp)
    lw   $t1, 52($sp)
    lw   $t2, 48($sp)
    lw   $t3, 44($sp)
    lw   $t4, 40($sp)
    lw   $t5, 36($sp)
    lw   $t6, 32($sp)
    lw   $t7, 28($sp)
    lw   $t8, 24($sp)
    lw   $t9, 20($sp)
    addi $sp, $sp, 68
    move $v0, $t3
    jr $ra
LABEL2:
main:
    move $fp, $sp
    addi $sp, $sp, -24
    sw   $ra, 20($sp)
    sw   $fp, 16($sp)
    li $t2, 2
    move $a0, $t2
    jal factorial
    move $t1, $v0
    move $t0, $t1
    la $a0, str0
    move $a1, $t0
    # Spilling n from $t9
#printf
 move $a0, $a0
    li $v0, 4
syscall
  li $v0, 4 
 la $a0, newline 
 syscall
 move $a0, $a1
    li $v0, 1
syscall
  li $v0, 4 
 la $a0, newline 
 syscall
    move $t9, $v0
    lw   $fp, 16($sp)
    lw   $ra, 20($sp)
    li $v0, 10
    syscall
File copied to Windows at: /mnt/c/Users/anups/Downloads/output.s