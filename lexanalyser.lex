%{
    #include <algorithm>
    #include <iostream>
    #include <utility>
    #include <iomanip>
    #include <math.h>
    #include <cstdio> 
    #include <vector>
    #include <string>
    #include <map>

    using namespace std;
    map<string,vector<string>> tokentoLexeme;

%}


BOOL              bool
BREAK             break
CASE              case
CONTINUE          continue
GOTO              goto
DO                do
DEFAULT           default 
IF                if
ELSE              else 
FOR               for 
CONST             const 
TRUE              true 
FALSE             false
STATIC            static 
SWITCH            switch 
WHILE             while 
VOID              void 
RETURN            return 
SIZEOF            sizeof
FLOAT             float 
INTEGER           int 
DOUBLE            double 
EXTERN            extern 
SHORT             short 
LONG              long 

LBRACE            \}
RBRACE            \{
LBRACKET          \]
RBRACKET          \[
LPARENTHESES      \(
RPARENTHESES      \)
DOT               \.
COMMA             ,
COLON             :
SEMICOLON         ;
PLUS              \+
MINUS             -
STAR              \*
DIVIDE            \/
MODULO            %	
AMPERSAND         &
OR                \|
XOR               \^
EXCLAMATION       !
TILDE             ~
EQUALS            =
LESS_THAN         <
GREATER_THAN      >
QUESTION_MARK     \?
DOUBLE_COLON      ::
INCREMENT         \+\+
DECREMENT         --
REL_AND           &&
REL_OR            \|\|
REL_EQUALS        ==
REL_NOT_EQ        !=
LESS_EQUALS       <=
GREATER_EQUALS    >=	
ASSIGN_PLUS       \+=
ASSIGN_MINUS      -=
ASSIGN_STAR       \*=
ASSIGN_DIV        \/=
ASSIGN_MOD        %=
ASSIGN_AND        &=
ASSIGN_OR         \|=
ASSIGN_XOR        \^=
LEFT_SHIFT        <<
LEFT_SHIFT_EQ     <<=
RIGHT_SHIFT       >>
RIGHT_SHIFT_EQ    \>>=
LAMBDA_ARROW      ->
VARIABLE_ARGS     ...