main
ID main
Direct declarator main
x
ID x
Direct declarator x
I am in int
Primary expression 
Postfix expression 
Unary expression 
I am in int
Primary expression 
Postfix expression 
Unary expression 
I am in int
Primary expression 
Postfix expression 
Unary expression 
I am in int
Primary expression 
Postfix expression 
Unary expression 
cond expression = int
cond expression2 = 
Primary expression 
Postfix expression 
Unary expression 
I am in int
Primary expression 
Postfix expression 
Unary expression 
I am in int
Primary expression 
Postfix expression 
Unary expression 
cond expression = int
cond expression2 = 
declaratoreiii x
Yes int found
declarator equals initializer x
init_d x
parsing stack top = x
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = 0ãºzÿ
top ka type = int
Correct type declaration
y
ID y
Direct declarator y
ID found: x
ID x
ID2 x
check
Primary expression x
Postfix expression x
Unary expression x
ID found: x
ID x
ID2 x
check
Primary expression x
Postfix expression x
Unary expression x
I am in int
Primary expression 
Postfix expression 
Unary expression 
cond expression = 
cond expression2 = x
declaratoreiii y
declarator equals initializer y
init_d y
parsing stack top = y
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = 0ãºzÿ
Created new symbol: y with type int
Correct type declaration
ID found: x
ID x
ID2 x
check
Primary expression x
Postfix expression x
Unary expression x
ID found: y
ID y
ID2 y
check
Primary expression y
Postfix expression y
Unary expression y
cond expression = 
cond expression2 = x
ID found: y
ID y
ID2 y
check
Primary expression y
Postfix expression y
Unary expression y
cond expression = 
cond expression2 = y
ID found: x
ID x
ID2 x
check
Primary expression x
Postfix expression x
Unary expression x
cond expression = 
cond expression2 = x
i
ID i
Direct declarator i
declarator11 i
declarator i
init_d i
parsing stack top = i
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = 0ãºzÿ
Created new symbol: i with type int
Correct type declaration
ID found: i
ID i
ID2 i
check
Primary expression i
Postfix expression i
I am in int
Primary expression 
Postfix expression 
Unary expression 
cond expression = int
cond expression2 = 
unary inside assignment = i
Assignment expression = int
Correct type assignment
ID found: i
ID i
ID2 i
check
Primary expression i
Postfix expression i
Unary expression i
I am in int
Primary expression 
Postfix expression 
Unary expression 
cond expression = 
cond expression2 = i
ID found: i
ID i
ID2 i
check
Primary expression i
Postfix expression i
Unary expression i
cond expression = 
cond expression2 = i
ID found: y
ID y
ID2 y
check
Primary expression y
Postfix expression y
Unary expression y
cond expression = 
cond expression2 = y
ID found: x
ID x
ID2 x
check
Primary expression x
Postfix expression x
Unary expression x
ID found: y
ID y
ID2 y
check
Primary expression y
Postfix expression y
Unary expression y
cond expression = 
cond expression2 = x
Parsing stack size = 0
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| i               | int                  | 4       | 0          |
| x               | int                  | 4       | 2          |
| y               | int                  | 4       | N/A        |
-----------------------------------------------------------------
