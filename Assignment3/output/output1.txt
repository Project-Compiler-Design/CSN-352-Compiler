main
ID main
Direct declarator main
a
ID a
Direct declarator a
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 10
declaratoreiii a
Yes int found
declarator equals initializer a
init_d a
b
ID b
Direct declarator b
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 5
declaratoreiii b
Yes int found
declarator equals initializer b
init_D b
parsing stack top = b
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = @åºý
top ka type = int
top ka type = int
Correct type declaration
c
ID c
Direct declarator c
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 5
declaratoreiii c
Yes int found
declarator equals initializer c
init_d c
parsing stack top = c
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = @åºý
top ka type = int
Correct type declaration
d
ID d
Direct declarator d
ID found: a
ID a
ID2 a
check
Symbol found a
Code 
Primary expression found: 
postfix expression found: 
Unary expression a
ID found: b
ID b
ID2 b
check
Symbol found b
Code 
Primary expression found: 
postfix expression found: 
Unary expression b
ID found: c
ID c
ID2 c
check
Symbol found c
Code 
Primary expression found: 
postfix expression found: 
Unary expression c
cond expression = char
cond expression2 = a
condi expression found: 

t0:=  a*b

t1:=  t0+c
declaratoreiii d
Yes char found 
declarator equals initializer d
init_d d
parsing stack top = d
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = @åºý
top ka type = char
Error: Type mismatch in declaration
a
ID a
Direct declarator a
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 5
declaratoreiii a
Yes int found
declarator equals initializer a
init_d a
parsing stack top = a
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = @åºý
top ka type = int
Correct type declaration
b
ID b
Direct declarator b
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 10
declaratoreiii b
Yes int found
declarator equals initializer b
init_d b
parsing stack top = b
Declaration specifiers = int
Init declarator list = 0.000000
dollar 3 type = @åºý
top ka type = int
Correct type declaration
Parsing stack size = 0
Printing scope table
Count of scopes 3
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
-----------------------------------------------------------------
Scope is here
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | int                  | 4       | 5          |
| b               | int                  | 4       | 10         |
-----------------------------------------------------------------
Scope is here
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | int                  | 4       | 10         |
| b               | int                  | 4       | 5          |
| c               | int                  | 4       | 5          |
| d               | char                 | 2       |            |
| t0              | char                 | 2       |            |
| t1              | char                 | 2       |            |
-----------------------------------------------------------------
Scope is here
