result
ID result
a
ID a
Direct declarator a
b
ID b
Direct declarator b
par num $1 1
par num $3 1
c
ID c
Direct declarator c
par num $1 2
par num $3 1
int
int
float
par num3
Brackets found with parameter= result
Par list 3
param list size 3
int
int
float
has a parameter or not 3
Direct declarator 
inside compound stt
inside compound stt
d
ID d
Direct declarator d
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 5
IDHAR HU MAIIII
declaratoreiii d
Yes int found
declarator equals initializer d
d
hi
parsing stack top = d
Declaration specifiers = int
Init declarator list = d
dollar 3 type = 
int
Correct type declaration
ID found: d
ID d
ID2 d
check
Symbol found d
Code 
Primary expression found: 
postfix expression found: 
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 0
unary inside assignment = d
Assignment expression = int
find symbol type: int
Correct type assignment
Correct type assignment
3AC code for assignment
hiiiiiiiiiiiii 

d:=  0
IDHAR HU MAIIII2
ID found: d
ID d
ID2 d
check
Symbol found d
Code 
Primary expression found: 
postfix expression found: 
Unary expression d
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = d
condi expression found: 
4
t0:=  d<4
IDHAR HU MAIIII2
ID found: d
ID d
ID2 d
check
Symbol found d
Code 
Primary expression found: 
postfix expression found: 
Unary expression d
cond expression = 
cond expression2 = d
condi expression found: 
d:=  d+1
IDHAR HU MAIIII2
inside compound stt
inside compound stt
ID found: d
ID d
ID2 d
check
Symbol found d
Code 
Primary expression found: 
postfix expression found: 
Unary expression d
cond expression = 
cond expression2 = d
condi expression found: 
d:=  d+1
IDHAR HU MAIIII2
main
ID main
It is function without params 
has a parameter or not 0
Direct declarator main
inside compound stt
inside compound stt
c
ID c
Direct declarator c
con
Primary expression found: int
postfix expression found: int
Unary expression 
cond expression = int
cond expression2 = 
condi expression found: 4
IDHAR HU MAIIII
declaratoreiii c
Yes int found
declarator equals initializer c
c
hi
parsing stack top = c
Declaration specifiers = int
Init declarator list = c
dollar 3 type = 
int
Correct type declaration
Parsing stack size = 0
Printing scope table
Count of scopes 4
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| result          |                      | 0       | N/A        |
-----------------------------------------------------------------
Scope is here
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
-----------------------------------------------------------------
Scope is here
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| a               | int                  | 4       | N/A        |
| b               | int                  | 4       | N/A        |
| c               | float                | 4       | N/A        |
| d               | int                  | 4       | 5          |
| t0              | int                  | 4       | N/A        |
-----------------------------------------------------------------
Scope is here
-----------------------------------------------------------------
| Identifier      | Type                 | Size    | Value      |
-----------------------------------------------------------------
| c               | int                  | 4       | 4          |
-----------------------------------------------------------------
Scope is here
Cleaning complete! Check cleaned_output.txt
